/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import '../ng_dev_mode';
import { getContext } from '../context_discovery';
import { scheduleTick } from '../instructions';
import { createEmptyStylingContext } from '../styling';
import { getRootContext } from '../util';
import { CorePlayerHandler } from './core_player_handler';
export function addPlayer(ref, player) {
    var elementContext = getContext(ref);
    var animationContext = getOrCreateAnimationContext(elementContext.native, elementContext);
    animationContext.push(player);
    player.addEventListener(200 /* Destroyed */, function () {
        var index = animationContext.indexOf(player);
        if (index >= 0) {
            animationContext.splice(index, 1);
        }
        player.destroy();
    });
    var rootContext = getRootContext(elementContext.lViewData);
    var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());
    playerHandler.queuePlayer(player, ref);
    var nothingScheduled = rootContext.flags === 0 /* Empty */;
    // change detection may or may not happen therefore
    // the core code needs to be kicked off to flush the animations
    rootContext.flags |= 2 /* FlushPlayers */;
    if (nothingScheduled) {
        scheduleTick(rootContext);
    }
}
export function getPlayers(ref) {
    return getOrCreateAnimationContext(ref);
}
export function getOrCreateAnimationContext(target, context) {
    context = context || getContext(target);
    if (ngDevMode && !context) {
        throw new Error('Only elements that exist in an Angular application can be used for animations');
    }
    var lViewData = context.lViewData, lNodeIndex = context.lNodeIndex;
    var value = lViewData[lNodeIndex];
    var stylingContext = value;
    if (!Array.isArray(value)) {
        stylingContext = lViewData[lNodeIndex] = createEmptyStylingContext(value);
    }
    return stylingContext[1 /* AnimationContext */] || allocAnimationContext(stylingContext);
}
function allocAnimationContext(data) {
    return data[1 /* AnimationContext */] = [];
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxheWVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL3JlbmRlcjMvYW5pbWF0aW9ucy9wbGF5ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sZ0JBQWdCLENBQUM7QUFFeEIsT0FBTyxFQUFXLFVBQVUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQzFELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUc3QyxPQUFPLEVBQStCLHlCQUF5QixFQUFDLE1BQU0sWUFBWSxDQUFDO0FBQ25GLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFFdkMsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHeEQsTUFBTSxVQUFVLFNBQVMsQ0FDckIsR0FBd0QsRUFBRSxNQUFjO0lBQzFFLElBQU0sY0FBYyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUcsQ0FBQztJQUN6QyxJQUFNLGdCQUFnQixHQUFHLDJCQUEyQixDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsY0FBYyxDQUFHLENBQUM7SUFDOUYsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTlCLE1BQU0sQ0FBQyxnQkFBZ0Isc0JBQXNCO1FBQzNDLElBQU0sS0FBSyxHQUFHLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQyxJQUFJLEtBQUssSUFBSSxDQUFDLEVBQUU7WUFDZCxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ25CLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3RCxJQUFNLGFBQWEsR0FDZixXQUFXLENBQUMsYUFBYSxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsR0FBRyxJQUFJLGlCQUFpQixFQUFFLENBQUMsQ0FBQztJQUN2RixhQUFhLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUV2QyxJQUFNLGdCQUFnQixHQUFHLFdBQVcsQ0FBQyxLQUFLLGtCQUEyQixDQUFDO0lBRXRFLG1EQUFtRDtJQUNuRCwrREFBK0Q7SUFDL0QsV0FBVyxDQUFDLEtBQUssd0JBQWlDLENBQUM7SUFDbkQsSUFBSSxnQkFBZ0IsRUFBRTtRQUNwQixZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDM0I7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxHQUF3RDtJQUNqRixPQUFPLDJCQUEyQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzFDLENBQUM7QUFFRCxNQUFNLFVBQVUsMkJBQTJCLENBQ3ZDLE1BQVUsRUFBRSxPQUF5QjtJQUN2QyxPQUFPLEdBQUcsT0FBTyxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUcsQ0FBQztJQUMxQyxJQUFJLFNBQVMsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUN6QixNQUFNLElBQUksS0FBSyxDQUNYLCtFQUErRSxDQUFDLENBQUM7S0FDdEY7SUFFTSxJQUFBLDZCQUFTLEVBQUUsK0JBQVUsQ0FBWTtJQUN4QyxJQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDcEMsSUFBSSxjQUFjLEdBQUcsS0FBdUIsQ0FBQztJQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN6QixjQUFjLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLHlCQUF5QixDQUFDLEtBQXFCLENBQUMsQ0FBQztLQUMzRjtJQUNELE9BQU8sY0FBYywwQkFBK0IsSUFBSSxxQkFBcUIsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUNoRyxDQUFDO0FBRUQsU0FBUyxxQkFBcUIsQ0FBQyxJQUFvQjtJQUNqRCxPQUFPLElBQUksMEJBQStCLEdBQUcsRUFBRSxDQUFDO0FBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgJy4uL25nX2Rldl9tb2RlJztcblxuaW1wb3J0IHtMQ29udGV4dCwgZ2V0Q29udGV4dH0gZnJvbSAnLi4vY29udGV4dF9kaXNjb3ZlcnknO1xuaW1wb3J0IHtzY2hlZHVsZVRpY2t9IGZyb20gJy4uL2luc3RydWN0aW9ucyc7XG5pbXBvcnQge0xFbGVtZW50Tm9kZX0gZnJvbSAnLi4vaW50ZXJmYWNlcy9ub2RlJztcbmltcG9ydCB7Um9vdENvbnRleHRGbGFnc30gZnJvbSAnLi4vaW50ZXJmYWNlcy92aWV3JztcbmltcG9ydCB7U3R5bGluZ0NvbnRleHQsIFN0eWxpbmdJbmRleCwgY3JlYXRlRW1wdHlTdHlsaW5nQ29udGV4dH0gZnJvbSAnLi4vc3R5bGluZyc7XG5pbXBvcnQge2dldFJvb3RDb250ZXh0fSBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtDb3JlUGxheWVySGFuZGxlcn0gZnJvbSAnLi9jb3JlX3BsYXllcl9oYW5kbGVyJztcbmltcG9ydCB7QW5pbWF0aW9uQ29udGV4dCwgQ29tcG9uZW50SW5zdGFuY2UsIERpcmVjdGl2ZUluc3RhbmNlLCBQbGF5U3RhdGUsIFBsYXllcn0gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFBsYXllcihcbiAgICByZWY6IENvbXBvbmVudEluc3RhbmNlIHwgRGlyZWN0aXZlSW5zdGFuY2UgfCBIVE1MRWxlbWVudCwgcGxheWVyOiBQbGF5ZXIpOiB2b2lkIHtcbiAgY29uc3QgZWxlbWVudENvbnRleHQgPSBnZXRDb250ZXh0KHJlZikgITtcbiAgY29uc3QgYW5pbWF0aW9uQ29udGV4dCA9IGdldE9yQ3JlYXRlQW5pbWF0aW9uQ29udGV4dChlbGVtZW50Q29udGV4dC5uYXRpdmUsIGVsZW1lbnRDb250ZXh0KSAhO1xuICBhbmltYXRpb25Db250ZXh0LnB1c2gocGxheWVyKTtcblxuICBwbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcihQbGF5U3RhdGUuRGVzdHJveWVkLCAoKSA9PiB7XG4gICAgY29uc3QgaW5kZXggPSBhbmltYXRpb25Db250ZXh0LmluZGV4T2YocGxheWVyKTtcbiAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgYW5pbWF0aW9uQ29udGV4dC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgICBwbGF5ZXIuZGVzdHJveSgpO1xuICB9KTtcblxuICBjb25zdCByb290Q29udGV4dCA9IGdldFJvb3RDb250ZXh0KGVsZW1lbnRDb250ZXh0LmxWaWV3RGF0YSk7XG4gIGNvbnN0IHBsYXllckhhbmRsZXIgPVxuICAgICAgcm9vdENvbnRleHQucGxheWVySGFuZGxlciB8fCAocm9vdENvbnRleHQucGxheWVySGFuZGxlciA9IG5ldyBDb3JlUGxheWVySGFuZGxlcigpKTtcbiAgcGxheWVySGFuZGxlci5xdWV1ZVBsYXllcihwbGF5ZXIsIHJlZik7XG5cbiAgY29uc3Qgbm90aGluZ1NjaGVkdWxlZCA9IHJvb3RDb250ZXh0LmZsYWdzID09PSBSb290Q29udGV4dEZsYWdzLkVtcHR5O1xuXG4gIC8vIGNoYW5nZSBkZXRlY3Rpb24gbWF5IG9yIG1heSBub3QgaGFwcGVuIHRoZXJlZm9yZVxuICAvLyB0aGUgY29yZSBjb2RlIG5lZWRzIHRvIGJlIGtpY2tlZCBvZmYgdG8gZmx1c2ggdGhlIGFuaW1hdGlvbnNcbiAgcm9vdENvbnRleHQuZmxhZ3MgfD0gUm9vdENvbnRleHRGbGFncy5GbHVzaFBsYXllcnM7XG4gIGlmIChub3RoaW5nU2NoZWR1bGVkKSB7XG4gICAgc2NoZWR1bGVUaWNrKHJvb3RDb250ZXh0KTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGxheWVycyhyZWY6IENvbXBvbmVudEluc3RhbmNlIHwgRGlyZWN0aXZlSW5zdGFuY2UgfCBIVE1MRWxlbWVudCk6IFBsYXllcltdIHtcbiAgcmV0dXJuIGdldE9yQ3JlYXRlQW5pbWF0aW9uQ29udGV4dChyZWYpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0T3JDcmVhdGVBbmltYXRpb25Db250ZXh0KFxuICAgIHRhcmdldDoge30sIGNvbnRleHQ/OiBMQ29udGV4dCB8IG51bGwpOiBBbmltYXRpb25Db250ZXh0IHtcbiAgY29udGV4dCA9IGNvbnRleHQgfHwgZ2V0Q29udGV4dCh0YXJnZXQpICE7XG4gIGlmIChuZ0Rldk1vZGUgJiYgIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdPbmx5IGVsZW1lbnRzIHRoYXQgZXhpc3QgaW4gYW4gQW5ndWxhciBhcHBsaWNhdGlvbiBjYW4gYmUgdXNlZCBmb3IgYW5pbWF0aW9ucycpO1xuICB9XG5cbiAgY29uc3Qge2xWaWV3RGF0YSwgbE5vZGVJbmRleH0gPSBjb250ZXh0O1xuICBjb25zdCB2YWx1ZSA9IGxWaWV3RGF0YVtsTm9kZUluZGV4XTtcbiAgbGV0IHN0eWxpbmdDb250ZXh0ID0gdmFsdWUgYXMgU3R5bGluZ0NvbnRleHQ7XG4gIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBzdHlsaW5nQ29udGV4dCA9IGxWaWV3RGF0YVtsTm9kZUluZGV4XSA9IGNyZWF0ZUVtcHR5U3R5bGluZ0NvbnRleHQodmFsdWUgYXMgTEVsZW1lbnROb2RlKTtcbiAgfVxuICByZXR1cm4gc3R5bGluZ0NvbnRleHRbU3R5bGluZ0luZGV4LkFuaW1hdGlvbkNvbnRleHRdIHx8IGFsbG9jQW5pbWF0aW9uQ29udGV4dChzdHlsaW5nQ29udGV4dCk7XG59XG5cbmZ1bmN0aW9uIGFsbG9jQW5pbWF0aW9uQ29udGV4dChkYXRhOiBTdHlsaW5nQ29udGV4dCk6IEFuaW1hdGlvbkNvbnRleHQge1xuICByZXR1cm4gZGF0YVtTdHlsaW5nSW5kZXguQW5pbWF0aW9uQ29udGV4dF0gPSBbXTtcbn1cbiJdfQ==